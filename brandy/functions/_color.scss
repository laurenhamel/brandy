// Adpated from Brendan Saunders' brightness()
@function brightness( $color ){
    
    $factor: (
        R: .299,
        G: .587,
        B: .114
    );
    
    $R: red( $color ) * map-get( $factor, R ) ;
    $G: green( $color ) * map-get( $factor, G );
    $B: blue( $color ) * map-get( $factor, B );
    
    @return ($R + $G + $B) / 255 * 100%;
    
}

// Adapted from Brendan Saunders' color-contrast()
@function color-contrast( $color, $dark: $brandy-dark-text, $light: $brandy-light-text ){
    
    @if( $color == null or $color == transparent ){ @return null; }
    @else {
        
        // Brightness
        $brightness-color: brightness( $color );
        $brightness-dark: brightness( $dark );
        $brightness-light: brightness( $light );
        
        // Difference
        $difference-dark: abs( $brightness-color - $brightness-dark );
        $difference-light: abs( $brightness-color - $brightness-light );
        
        @return if( $difference-light > $difference-dark, $light, $dark );
        
    }
        
}

// to-HEX() - Retrieves the HEX value of the color given
@function to-HEX( $color ){
    
    $DEC: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15;
    $HEX: 0 1 2 3 4 5 6 7 8 9 A  B  C  D  E  F;
    
    $R: red($color);
    $G: green($color);
    $B: blue($color);
    
    $R1: nth($HEX, index($DEC, floor( $R / 16 ) ));
    $R2: nth($HEX, index($DEC, floor( $R % 16 ) ));
    $G1: nth($HEX, index($DEC, floor( $G / 16 ) ));
    $G2: nth($HEX, index($DEC, floor( $G % 16 ) ));
    $B1: nth($HEX, index($DEC, floor( $B / 16) ));
    $B2: nth($HEX, index($DEC, floor( $B % 16) ));

    $result: $R1 $R2 $G1 $G2 $B1 $B2;
   
    @return unquote( '\#' + to-string($result,'') );
    
};

// to-RGB() - Retrieves the RGB value of the color given
@function to-RGB( $color ){
    
    $RGB: red($color), green($color), blue($color);
    
    @return unquote( 'rgb(' + $RGB + ')' );
}

// Adapted from Hugo Giraudel's tint()
@function tint( $color, $percent ){
    @return mix(white, $color, $percent);
}

// Adapted from Hugo Giraudel's shade()
@function shade( $color, $percent ){
    @return mix(black, $color, $percent);
}